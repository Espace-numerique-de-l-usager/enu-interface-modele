variables:
  # fix for old git version
  GIT_STRATEGY: clone
  GIT_SSL_NO_VERIFY: "true"
  # config Maven
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=/cache/.m2/repository"
  # config SonarQube
  SONAR_MAVEN_GOAL: org.sonarsource.scanner.maven:sonar-maven-plugin:3.7.0.1746:sonar
  SONAR_USER_HOME: /cache/sonar

default:
  image:
    name: $DOCKER_URL/ch/ge/cti/build/docker-npm-maven:1.1.1
  tags:
    - 'for:application-project'
    - 'host:restricted-container'
    - 'net:soca-dev'

stages:
  - build
  - release

# le deploiement des snapshots se fait sur le depot Nexus de l'Etat, afin que le JAR soit rapidement disponible
build_and_sonar:
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS clean deploy $SONAR_MAVEN_GOAL
      -Dsonar.host.url=$SonarQube_URL -Dsonar.gitlab.project_id=$CI_PROJECT_PATH -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHA
      -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME -Dsonar.gitlab.max_blocker_issues_gate=-1 -Dsonar.gitlab.max_critical_issues_gate=-1
# remettre only !
#  only:
  except:
    - master

# le deploiement des releases se fait sur le depot OSSRH de Sonatype, puis se progage automatiquement sur Maven Central
# attention : dans GitLab, ajuster les valeurs de SCM_USER et de SCM_PASSWORD (mdp technique)
release_master:
  stage: release
  script:
    - ls -l $KEYSTORE_DIR
    - git config user.email $SCM_EMAIL
    - git config user.name $SCM_USER
    - git checkout $CI_COMMIT_REF_NAME
    - mvn $MAVEN_CLI_OPTS clean release:prepare release:perform
      -Possrh,maven-central
      -Dresume=false
      -Dusername=$SCM_USER -Dpassword=$SCM_PASSWORD
      -DscmCommentPrefix="[skip ci]"
      -Darguments="
      -DskipTests=true
      -Dgpg.passphrase=$GPG_PASSPHRASE
      -Djavax.net.ssl.trustStore=$KEYSTORE_DIR/mavenKeystore
      "
  when: manual
